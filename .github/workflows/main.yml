name: Api adapter pipeline

on:
  push:
    branches: ['develop', 'production']
  pull_request:
    branches: ['develop', 'production']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: truflation/api-adapter
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [17.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install
      - run: yarn test
  buildDevelop:
    name: Build/Develop
    if: github.event.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker (main)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev

      - name: Build and push Docker image (main)
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CONFIG=main

      - name: Extract metadata (tags, labels) for Docker (minertoken)
        id: meta-minertoken
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-minertoken:dev
      - name: Build and push Docker image (minertoken)
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-minertoken:dev
          labels: ${{ steps.meta-minertoken.outputs.labels }}
          build-args: |
            CONFIG=minertoken

      - name: Extract metadata (tags, labels) for Docker (nuon)
        id: meta-nuon
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-nuon:dev
      - name: Build and push Docker image (nuon)
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-nuon:dev
          labels: ${{ steps.meta-nuon.outputs.labels }}
          build-args: |
            CONFIG=nuon

  buildProduction:
    name: Build/Production
    if: github.event.ref == 'refs/heads/production'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker (main)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Build and push Docker image (main)
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CONFIG=main

      - name: Extract metadata (tags, labels) for Docker (minertoken)
        id: meta-minertoken
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-minertoken:latest
      - name: Build and push Docker image (minertoken)
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-minertoken:latest
          labels: ${{ steps.meta-minertoken.outputs.labels }}
          build-args: |
            CONFIG=minertoken

      - name: Extract metadata (tags, labels) for Docker (nuon)
        id: meta-nuon
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-nuon:latest
      - name: Build and push Docker image (nuon)
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-nuon:latest
          labels: ${{ steps.meta-nuon.outputs.labels }}
          build-args: |
            CONFIG=nuon

  deployProduction:
    name: Deploy/Production
    # needs: buildProduction
    runs-on: ubuntu-latest
    steps:
      - name: deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.API_ADAPTER_HOST }}
          username: ${{ secrets.API_ADAPTER_HOST_USERNAME }}
          key: ${{ secrets.API_ADAPTER_KEY }}
          port: ${{ secrets.API_ADAPTER_PORT }}
          script: ./api-adapter/run.sh;
